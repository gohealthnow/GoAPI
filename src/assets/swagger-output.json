{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Some description..."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User routes",
      "path": "/user"
    },
    {
      "name": "Products",
      "description": "Products routes",
      "path": "/products"
    }
  ],
  "paths": {
    "/pharmacy/{id}": {
      "get": {
        "tags": [
          "Pharmacy"
        ],
        "description": "Endpoint para listar uma farmácia.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Pharmacy  identification."
          }
        ],
        "responses": {
          "200": {
            "description": "Farmácia listada com sucesso."
          },
          "404": {
            "description": "Erro ao listar farmácia."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/pharmacy/": {
      "get": {
        "tags": [
          "Pharmacy"
        ],
        "description": "Endpoint para listar todas as farmácias.",
        "responses": {
          "200": {
            "description": "Farmácias listadas com sucesso."
          },
          "404": {
            "description": "Erro ao listar farmácias."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/pharmacy/create": {
      "post": {
        "tags": [
          "Pharmacy"
        ],
        "description": "Endpoint para criar uma farmácia.",
        "parameters": [
          {
            "name": "name",
            "description": "Pharmacy name.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cep",
            "description": "Pharmacy postal code.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "description": "Pharmacy email.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "imageurl",
            "description": "Pharmacy image url.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "description": "Pharmacy phone.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Farmácia criada com sucesso."
          },
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Erro ao criar farmácia."
          },
          "406": {
            "description": "Not Acceptable"
          },
          "500": {
            "description": "Erro no servidor."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "cep": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "imageurl": {
                    "example": "any"
                  },
                  "phone": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pharmacy/search/{name}": {
      "get": {
        "tags": [
          "Pharmacy"
        ],
        "description": "Endpoint para buscar farmácias por nome.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Pharmacy name."
          }
        ],
        "responses": {
          "200": {
            "description": "Farmácias encontradas com sucesso."
          },
          "404": {
            "description": "Erro ao buscar farmácias."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/product/create": {
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint para criar um produto.",
        "parameters": [
          {
            "name": "Product",
            "in": "body",
            "description": "Product information.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Product Name"
                },
                "price": {
                  "type": "number",
                  "example": 100
                }
              },
              "required": [
                "name",
                "price"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Produto criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Erro ao criar produto."
          },
          "409": {
            "description": "Produto já existe."
          },
          "500": {
            "description": "Erro no servidor."
          },
          "501": {
            "description": "Not Implemented"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "price": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint para listar todos os produtos.",
        "responses": {
          "200": {
            "description": "Produtos listados com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Erro ao listar produtos."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/product/{id}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint para deletar um produto.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Produto deletado com sucesso."
          },
          "404": {
            "description": "Erro ao deletar produto."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint para buscar um produto por id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Produto encontrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Erro ao buscar produto."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/product/name/{name}": {
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint para buscar um produto por nome.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Produto encontrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Erro ao buscar produto."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/product/update/{id}": {
      "put": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint para atualizar um produto por id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Product",
            "in": "body",
            "description": "Product information.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Product Name"
                },
                "price": {
                  "type": "number",
                  "example": 100
                },
                "promotion": {
                  "type": "boolean",
                  "example": true
                },
                "stock": {
                  "type": "number",
                  "example": 10
                }
              },
              "required": [
                "name",
                "price",
                "promotion",
                "stock"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Produto atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Erro ao atualizar produto."
          },
          "500": {
            "description": "Erro no servidor."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "example": "any"
                  },
                  "promotion": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/update/stock/{productId}/{pharmacyId}": {
      "put": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint para atualizar o estoque de um produto.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do produto."
          },
          {
            "name": "pharmacyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID da farmácia."
          }
        ],
        "responses": {
          "200": {
            "description": "Estoque atualizado com sucesso."
          },
          "404": {
            "description": "Erro ao atualizar estoque."
          },
          "500": {
            "description": "Erro no servidor."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/stock/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint para verificar se existe um novo produto no estoque.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Produto disponível para retirada."
          },
          "404": {
            "description": "Produto não disponível."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/server": {
      "get": {
        "tags": [
          "Server"
        ],
        "description": "Endpoint para testar a conexão com o servidor.",
        "responses": {
          "200": {
            "description": "Servidor conectado."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/stock/{pharmacy}/{product}": {
      "get": {
        "tags": [
          "Stock"
        ],
        "description": "Endpoint para obter a quantidade disponível de um produto em uma farmácia.",
        "parameters": [
          {
            "name": "pharmacy",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Pharmacy ID."
          },
          {
            "name": "product",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Quantidade disponível obtida com sucesso."
          },
          "404": {
            "description": "Produto não encontrado."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/user/": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint  para listar todos os usuários.",
        "responses": {
          "200": {
            "description": "Usuários listados com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao listar usuários."
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário obtido com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Usuário não encontrado."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para deletar um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário deletado com sucesso."
          },
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint  para realizar login.",
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "calculte@univer.com"
                },
                "password": {
                  "type": "string",
                  "example": "123456"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login realizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Credenciais inválidas."
          },
          "500": {
            "description": "Erro no servidor."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para realizar registro.",
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@gohealth.com"
                },
                "password": {
                  "type": "string",
                  "example": "123456"
                },
                "name": {
                  "type": "string",
                  "example": "User"
                }
              },
              "required": [
                "email",
                "password",
                "name"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Registro realizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Erro no servidor."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para realizar logout.",
        "responses": {
          "200": {
            "description": "Logout realizado com sucesso."
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para obter informações do usuário.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Informações do usuário obtidas com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "498": {
            "description": ""
          }
        }
      }
    },
    "/user/role": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para atualizar o papel do usuário.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User",
            "in": "params",
            "description": "User information.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "role": {
                  "type": "string",
                  "example": "admin"
                }
              },
              "required": [
                "id",
                "role"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Papel do usuário atualizado com sucesso."
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Erro no servidor."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/product/": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para linkar um produto ao usuário.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "prodid": {
                  "type": "number",
                  "example": 6
                }
              },
              "required": [
                "id",
                "prodid"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Produto linkado ao usuário com sucesso."
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Erro no servidor."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "prodid": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/product/unlink": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para desvincular um produto do usuário.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "prodid": {
                  "type": "number",
                  "example": 6
                }
              },
              "required": [
                "id",
                "prodid"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Produto desvinculado do usuário com sucesso."
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Erro no servidor."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "prodid": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/product/buy": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para realizar a compra de um produto.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Product Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "prodid": {
                  "type": "number",
                  "example": 6
                },
                "quantity": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "id",
                "prodid",
                "quantity"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Produto comprado com sucesso."
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Erro no servidor."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "prodid": {
                    "example": "any"
                  },
                  "pharid": {
                    "example": "any"
                  },
                  "quantity": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/order": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para listar as compras do usuário.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Compras listadas com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Erro no servidor."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/review": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para realizar uma avaliação.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Review Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "prodid": {
                  "type": "number",
                  "example": 6
                },
                "rating": {
                  "type": "number",
                  "example": 5
                },
                "comment": {
                  "type": "string",
                  "example": "Muito bom!"
                }
              },
              "required": [
                "id",
                "prodid",
                "rating",
                "comment"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Avaliação realizada com sucesso."
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Erro no servidor."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "prodid": {
                    "example": "any"
                  },
                  "rating": {
                    "example": "any"
                  },
                  "comment": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "number"
                  }
                }
              },
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "email": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "product": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "array"
                  },
                  "items": {
                    "xml": {
                      "name": "product"
                    },
                    "$ref": "#/components/schemas/Product"
                  }
                }
              },
              "bio": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "role": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "avatar": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "number"
                  }
                }
              },
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "description": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "price": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "number"
                  }
                }
              },
              "stock": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "number"
                  }
                }
              },
              "image": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "weight": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "number"
                  }
                }
              },
              "dimensions": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "rating": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "number"
                  }
                }
              },
              "createdAt": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "updatedAt": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "Product"
        }
      }
    }
  }
}